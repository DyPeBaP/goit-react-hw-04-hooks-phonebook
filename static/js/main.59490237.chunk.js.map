{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetForm","className","s","formBox","preventDefault","labelName","itemName","inputName","type","pattern","title","required","onChange","labelNumber","itemNumber","inputNumber","buttonAdd","ContactListItem","ContactList","contacts","deliteContact","list","map","id","item","buttonDelete","onClick","Filter","nameFilter","inputFilter","initialContacts","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","window","setItem","stringify","app","contact","shortid","generate","some","userName","alert","prev","lowerCaseFilter","toLowerCase","includes","FilterLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59490237.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameFilter\":\"Filter_nameFilter__3_nVm\",\"inputFilter\":\"Filter_inputFilter__1lO1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__15Tap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"ContactForm_formBox__3pe5C\",\"itemName\":\"ContactForm_itemName__2avlW\",\"itemNumber\":\"ContactForm_itemNumber__17Fca\",\"inputName\":\"ContactForm_inputName__2CBHA\",\"inputNumber\":\"ContactForm_inputNumber__2Vq68\",\"buttonAdd\":\"ContactForm_buttonAdd__1dtQH\"};","import { useState } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      \r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      \r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.formBox} onSubmit={handleSubmit}>\r\n      <label className={s.labelName}>\r\n        <p className={s.itemName}>Name</p>\r\n        <input\r\n          className={s.inputName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label className={s.labelNumber}>\r\n        <p className={s.itemNumber}>Number</p>\r\n        <input\r\n          className={s.inputNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n        />\r\n      </label>\r\n      <button className={s.buttonAdd} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import s from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactListItem({ name, number }) {\r\n  return (\r\n    <>\r\n      <p className={s.name}>Name: {name}</p>\r\n      <p className={s.number}>Number: {number}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import s from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nfunction ContactList({ contacts, deliteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <ContactListItem key={id} name={name} number={number} />\r\n          <button\r\n            className={s.buttonDelete}\r\n            type=\"button\"\r\n            onClick={() => deliteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deliteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import s from \"./Filter.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <>\r\n      <p className={s.nameFilter}>Find contacts by name</p>\r\n      <input\r\n        className={s.inputFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import { useState, useEffect } from \"react\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./App.module.css\";\r\n\r\nconst initialContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? initialContacts;\r\n  });\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const handleAddContact = (name, number) => {\r\n    const contact = [\r\n      {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n      },\r\n    ];\r\n\r\n    const haveContact = contacts.some((userName) => userName.name === name);\r\n\r\n    !haveContact\r\n      ? setContacts((prev) => [...prev, ...contact])\r\n      : alert(`A ${name} with the same name has already been added`);\r\n  };\r\n\r\n  const deliteContact = (id) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== id));\r\n  };\r\n\r\n  const handleChangeFilter = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const FilterLowerCase = () => {\r\n    const lowerCaseFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(lowerCaseFilter)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={s.app}>\r\n      <ContactForm onSubmit={handleAddContact} />\r\n      <Filter value={filter} onChange={handleChangeFilter} />\r\n      <ContactList contacts={FilterLowerCase()} deliteContact={deliteContact} />\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1iF1i\",\"buttonDelete\":\"ContactList_buttonDelete__3xdhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3N6is\",\"name\":\"ContactListItem_name__1rFHQ\",\"number\":\"ContactListItem_number__2w7bn\"};"],"sourceRoot":""}